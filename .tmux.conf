# To update packages type Ctrl-b + I within tmux

# Shell and terminal
# set -g default-command bash
set -g default-terminal "tmux-256color"
set -ga terminal-overrides ",xterm-256color:RGB,tmux-256color:RGB"
# set -g default-terminal "screen-256color"
# set -ga terminal-overrides ",xterm-256color:RGB"
# set-option -ga terminal-overrides ",xterm-256color:Tc"

# Input
set -g mouse on
set -s escape-time 0
set -g allow-rename off
set -g mode-keys vi

# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'tmux-plugins/tmux-continuum'
set -g @plugin 'dracula/tmux'
# set -g @plugin 'christoomey/vim-tmux-navigator'

# Ressurect / Continuum
set -g @resurrect-strategy-vim 'session' # automatically restore vim panes
set -g @resurrect-strategy-nvim 'session' # automatically restore nvim panes
set -g @resurrect-processes '~Vim -> vim ssh sqlite3' # also automatically restore vim panes
set -g @resurrect-capture-pane-contents 'on' # restore programs running in panes
set -g @continuum-restore 'on'

# Portable clipboard setup (Windows WSL and Base Linux)
set -g set-clipboard off #this stops garbage characters from showing after a mouse selection when using gnome terminal (ubuntu)
set -g @copy_cmd 'cat'

if-shell 'command -v clip.exe >/dev/null 2>&1' \
  'set -g @copy_cmd "clip.exe"' \
  'if-shell "command -v wl-copy >/dev/null 2>&1" \
     \"set -g @copy_cmd 'wl-copy'\" \
     \"if-shell 'command -v xclip >/dev/null 2>&1' \
        'set -g @copy_cmd \"xclip -selection clipboard -in\"' \
        'set -g @copy_cmd cat'\"'

# Use the chosen copy command in copy-mode-vi and mouse copy
bind -T copy-mode-vi y      send-keys -X copy-pipe-and-cancel "#{@copy_cmd}"
bind -T copy-mode-vi C-c    send-keys -X copy-pipe-and-cancel "#{@copy_cmd}"
bind -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "#{@copy_cmd}"

# bind-key -T copy-mode-vi C-c send-keys -X copy-pipe-and-cancel "xclip -i -selection clipboard"
# bind-key -T copy-mode-vi MouseDragEnd1Pane send-keys -X copy-pipe "xclip -selection clipboard -i"

# Let navigation between panes be done across vim splits and using vim direction keys
# is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
#     | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"

# is_vim='#{m:#{pane_current_command},^(vim|nvim)$}'

# bind-key -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind-key -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind-key -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind-key -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind-key -n C-\\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Make new splits open in current directory
bind "\"" split-window -c "#{pane_current_path}"
bind "%" split-window -h -c "#{pane_current_path}"

set -g @dracula-show-powerline true
set -g @dracula-fixed-location "NYC"
set -g @dracula-plugins "weather"
set -g @dracula-show-flags true
set -g @dracula-show-left-icon session
set -g status-position bottom
set -g pane-border-style fg=magenta
set -g pane-active-border-style fg=green

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run '~/.tmux/plugins/tpm/tpm'
